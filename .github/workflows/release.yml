name: Release
on:
  release:
    types:
      - created

jobs:

  publish_on_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 14
    - name: install dependencies
      run: npm install
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npm run publish

  publish_on_mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 14
    - name: install dependencies
      run: npm install
    - name: Add MacOS certs
      run: chmod +x add-osx-cert.sh && ./add-osx-cert.sh
      env:
        CERTIFICATE_OSX_APPLICATION: ${{ secrets.CERTIFICATE_OSX_APPLICATION }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
    - name: Create .env file
      run: |
        touch .env
        echo INGESTION_URL=${{ secrets.INGESTION_URL }} >> .env
        echo BACKEND_API_URL=${{ secrets.BACKEND_API_URL }} >> .env
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
      run: npm run publish

  publish_on_win:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 14
    - name: install dependencies
      run: npm install
    - name: Add Windows certs
      id: write_file
      uses: timheuer/base64-to-file@v1
      with:
        fileName: 'insights-agent.pfx'
        encodedString: ${{ secrets.CERTIFICATE_WINDOWS_PFX }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - name: Restore dependencies
      run: |
        cd .\scripts\windows-data-tracker
        dotnet restore
    - name: Build Dotnet Tracker
      run: |
        cd .\scripts\windows-data-tracker
        dotnet publish -r win-x64 --self-contained=true /p:PublishSingleFile=true -c release
    - name: List files
      run: |
        Copy-Item -Path ".\scripts\windows-data-tracker\bin\Release\net6.0\win-x64\publish\*" -Destination ".\scripts\windows-data-tracker\build" -recurse -Force
        ls ".\scripts\windows-data-tracker\build"
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}
        CERTIFICATE_WINDOWS_PFX: ${{ steps.write_file.outputs.filePath }}
        INGESTION_URL: ${{ secrets.INGESTION_URL }}
        BACKEND_API_URL: ${{ secrets.BACKEND_API_URL }}
      run: npm run publish
